class Root extends React.Component {
  constructor() {
    super();
    this.state = {
      recent: [],
      alltime: [],
      data: [],
      sortRecent: "recent",
      sortAlltime: "alltime"
    };
    this.showRecent = this.showRecent.bind(this);
    this.sortRecent = this.sortRecent.bind(this);
    this.showAlltime = this.showAlltime.bind(this);
    this.sortAlltime = this.sortAlltime.bind(this);
    this.openLink = this.openLink.bind(this);
  }
  componentWillMount() {
    // Call APIs and retrieve data before component mounts:
    this.summonData();
  }
  summonData() {
   // Get Recent Camper Data:
   fetch('https://fcctop100.herokuapp.com/api/fccusers/top/recent').then(function(response) {
      if(response.ok) {
        response.json().then(function(data) {
          this.setState({
            recent: data,
            data: data
          });
        }.bind(this));
      } else {
        console.log('Network response was not ok.');
      }
    }.bind(this)).catch(function(error) {
      console.log('There has been a problem with your fetch operation: ' + error.message);
    });
    // Get All Time Camper Data:
    fetch('https://fcctop100.herokuapp.com/api/fccusers/top/alltime').then(function(response) {
      if(response.ok) {
        response.json().then(function(data) {
          this.setState({
            alltime: data
          });
        }.bind(this));
      } else {
        console.log('Network response was not ok.');
      }
    }.bind(this)).catch(function(error) {
      console.log('There has been a problem with your fetch operation: ' + error.message);
    });
  }
  showRecent() {
    this.setState({
      data: this.state.recent
    });
    document.getElementById("recentBtn").style.background = "#52DE8E";
    document.getElementById("alltimeBtn").style.background = "#F4F1BB";
    document.getElementById("sortRecent").style.background = "#F4F1BB";
    document.getElementById("sortAlltime").style.background = "#F4F1BB";
    document.getElementById("sortAlltime").innerHTML = "Sort by Alltime";
    document.getElementById("sortRecent").innerHTML = "Sort by Recent";
  }
  sortRecent() {
    var recent = this.state.recent.slice();
    var status = this.state.sortRecent;
    
    if (status === "recent") {
      var sorted = recent.sort(function(a, b) {
        return a.recent - b.recent
      });
      this.setState({
        data: sorted,
        sortRecent: "recentReversed"
      });
      document.getElementById("sortRecent").innerHTML = "Recent <i class='fa fa-arrow-down' aria-hidden='true'></i>";
    }
    
    else if (status === "recentReversed") {
      this.setState({
        data: recent,
        sortRecent: "recent"
      });
      document.getElementById("sortRecent").innerHTML = "Recent <i class='fa fa-arrow-up' aria-hidden='true'></i>";
    }
      
    document.getElementById("sortRecent").style.background = "#52DE8E";
    document.getElementById("sortAlltime").style.background = "#F4F1BB";   

  }
  showAlltime() {
    this.setState({
      data: this.state.alltime
    });
    
    document.getElementById("recentBtn").style.background = "#F4F1BB";
    document.getElementById("alltimeBtn").style.background = "#52DE8E";
    document.getElementById("sortRecent").style.background = "#F4F1BB";
    document.getElementById("sortAlltime").style.background = "#F4F1BB";
    document.getElementById("sortAlltime").innerHTML = "Sort by Alltime";
    document.getElementById("sortRecent").innerHTML = "Sort by Recent";     
  }
  sortAlltime() {
    var alltime = this.state.alltime.slice();
    var status = this.state.sortAlltime;
    
    if (status === "alltime") {
      var sorted = alltime.sort(function(a, b) {
        return a.alltime - b.alltime
      });
      this.setState({
        data: sorted,
        sortAlltime: "alltimeReversed"
      });
      document.getElementById("sortAlltime").innerHTML = "Alltime <i class='fa fa-arrow-down' aria-hidden='true'></i>";
    }
    
    else if (status === "alltimeReversed") {
      this.setState({
        data: alltime,
        sortAlltime: "alltime"
      });
      document.getElementById("sortAlltime").innerHTML = "Alltime <i class='fa fa-arrow-up' aria-hidden='true'></i>";
    }
    
    document.getElementById("sortRecent").innerHTML = "Sort by Recent";
    document.getElementById("sortRecent").style.background = "#F4F1BB";
    document.getElementById("sortAlltime").style.background = "#52DE8E";
  }
  openLink(target) {
    window.open("http://freecodecamp.com/" + target);
  }
  render() {
    var mapData = this.state.data.map( (user) => {
      var lastUpdate = user.lastUpdate.toString();
      
      var year = lastUpdate.substr(0,4);
      var month = lastUpdate.substr(5, 2);
      var day = lastUpdate.substr(8, 2);
      var time = lastUpdate.substr(11, 8);
      
      var parseMonth = function(string) {
        var str = string.substr(0,2);
        if (str === "01") { return "January" }
        else if (str === "02") { return "February" }
        else if (str === "03") { return "March" }
        else if (str === "04") { return "April" }
        else if (str === "05") { return "May" }
        else if (str === "06") { return "June" }
        else if (str === "07") { return "July" }
        else if (str === "08") { return "August" }    
        else if (str === "09") { return "Sepetember" }
        else if (str === "10") { return "October" }
        else if (str === "11") { return "November" }
        else if (str === "12") { return "December" }
      }
      
      return (
        <tr onClick = {this.openLink.bind(this, user.username)}>
          <td className = "userCol"><img src = {user.img} alt = "User Logo" />{user.username}</td>
          <td className = "dataCol">{user.recent}</td>
          <td className = "dataCol">{user.alltime}</td>
          <td className = "timeCol">{time + " " + parseMonth(month) + " " + day + ", " + year}</td>
        </tr>
      );
    });
    return (
      <div className = "wrapper">
        <p>Free Code Camp Leaderboard</p>
        <div className = "btnWrapper">
          <div className = "btn" id = "recentBtn" onClick = {this.showRecent}>Show Recent</div>
          <div className = "btn" id = "alltimeBtn" onClick = {this.showAlltime}>Show Alltime</div>
          <div className = "btn" id = "sortRecent" onClick = {this.sortRecent}>Sort by Recent</div>
          <div className = "btn" id = "sortAlltime" onClick = {this.sortAlltime}>Sort by Alltime</div>
        </div>
        <table>
          <tr>
            <th className = "userCol">Username</th>
            <th className = "dataCol">Recent</th>
            <th className = "dataCol">Alltime</th>
            <th className = "timeCol">Last Activity</th>
          </tr>
            {mapData}
        </table>
      </div>
    );
  }
  componentDidMount() {
    document.getElementById("recentBtn").style.background = "#52DE8E";
  }
};

ReactDOM.render(<Root />, document.getElementById('main'));